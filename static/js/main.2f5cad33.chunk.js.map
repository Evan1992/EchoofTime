{"version":3,"sources":["components/Plans/Plan.module.css","components/Auth/AuthForm.module.css","components/TimeRange/TimeRange.module.css","components/Plans/Plans.module.css","components/Plans/NewPlan/NewPlan.module.css","components/Layout/MainNavigation.module.css","components/Plans/NewPlan/NewPlanForm.module.css","components/UI/Backdrop.module.css","components/Plans/TodayPlans/TodayPlans.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","axios.js","components/Plans/NewPlan/NewPlanForm.js","components/UI/Backdrop.js","components/TimeRange/TimeRange.js","components/Utils/Utils.js","components/Timer/Timer.js","components/Plans/Plan.js","components/Plans/NewPlan/NewPlan.js","components/Timer/CurrentTimer.js","components/Plans/TodayPlans/TodayPlans.js","components/Plans/Plans.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","components/Auth/AuthForm.js","pages/AuthPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AuthContext","React","createContext","token","isLoggedIn","userID","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","initialUserID","useState","setToken","setUserID","contextValue","setItem","removeItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","instance","axios","create","timeout","baseURL","NewPlanForm","input_plan","useRef","control","type","ref","target","complete","active","title","current","comment","rank","parent","date","seconds","g_state","plans_element","addNewPlan","form_toggler","Backdrop","backdrop","TimeRange","input_frame","input_time","onChange","plan","expectedHoursChangeHandler","state","expected_hours","expectedMinutesChangeHandler","expected_minutes","expectedSecondsChangeHandler","expected_seconds","secondsToHHMMSS","HH","MM","formatTo2","SS","n","month_lookup","dateToReadable","date_string","Date","today","isSameDay","isToday","getMonth","getDate","o1","o2","getFullYear","dateStringIsToday","Timer","interval","this","plan_component","timer","nextProps","setState","console","log","clearInterval","setInterval","tick","Component","Plan","show_form","show_children","show_calendar","plan_date","id","formToggleHandler","childrenToggleHandler","clockToggleHandler","now","Math","floor","plan_in_progress","duration","plan_start_timestamp","reset_timer","updatePlanTimer","updateGState","start_timer","startTimerRecursively","updateTrigger","calendarToggleHandler","plans","plan_components","pause_timer","new_seconds","updatePlanAttr","dateChangeHandler","toISOString","slice","completeHandler","event","data","Fragment","Row","Col","xs","plan_left_button","Object","keys","length","plan_left_button_img","src","alt","span","style","display","justifyContent","padding","plan_calendar_icon","plan_calendar","plan_clock_button","plan_add_button","check_icon","check_icon_img","Container","fluid","width","map","item","child_task","NewPlan","placeholder","root_id","hint","CurrentTimer","plan_title","plan_id","TodayPlans","logged_seconds","init_today_plans","today_plans","child_id","key","dfs","entries","update_logged_seconds","Plans","isLoading","update","plan_promise","user_path","context","root_plan","get","then","response","new_root_plan","addRootPlan","catch","error","container","putDatabase","attr","delta","path","isString","put","parent_plan","post","new_id","name","addPlanChild","x","String","contextType","StartingPageContent","starting","HomePage","AuthForm","history","useHistory","emailInputRef","passwordInputRef","isLogin","setIsLogin","setIsLoading","auth","onSubmit","preventDefault","url","enteredEmail","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","res","ok","json","errorMessage","message","Error","idToken","localId","replace","err","alert","htmlFor","required","actions","toggle","prevState","AuthPage","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f5cad33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree_list\":\"Plan_tree_list__2tHAr\",\"tree_item\":\"Plan_tree_item__22s6D\",\"tree_row\":\"Plan_tree_row__2n25Y\",\"plan_title\":\"Plan_plan_title__2im9m\",\"plan_seconds\":\"Plan_plan_seconds__3jmBf\",\"plan_date\":\"Plan_plan_date__4ws_Z\",\"plan_left_button_img\":\"Plan_plan_left_button_img__Kff9T\",\"plan_right_buttons\":\"Plan_plan_right_buttons__2V5YE\",\"plan_clock_button\":\"Plan_plan_clock_button__kbv1p\",\"plan_add_button\":\"Plan_plan_add_button__MuLNR\",\"plan_left_button\":\"Plan_plan_left_button__256P2\",\"check_icon\":\"Plan_check_icon__2yBlw\",\"check_icon_img\":\"Plan_check_icon_img__2WoKh\",\"plan_calendar\":\"Plan_plan_calendar__2MiEa\",\"plan_calendar_icon\":\"Plan_plan_calendar_icon__2Rbua\",\"placeholder\":\"Plan_placeholder__12Ei-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_time\":\"TimeRange_input_time__2cu_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plans\":\"Plans_plans__2xzzG\",\"container\":\"Plans_container__3EDq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hint\":\"NewPlan_hint__3J7Bh\",\"placeholder\":\"NewPlan_placeholder__14myg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2lqQ1\",\"logo\":\"MainNavigation_logo__1TgMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"NewPlanForm_control__92qW0\",\"placeholder\":\"NewPlanForm_placeholder__DmNXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__1uHu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TodayPlans_title__1oIBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__kwCvL\"};","import React, { useState } from 'react'\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    userID: '',\n    login: (token) => {},\n    logout: () => {}\n})\n\nexport const AuthContextProvider = (props) => {\n    const initialToken = localStorage.getItem('token');\n    const initialUserID = localStorage.getItem('userID')\n    const [token, setToken] = useState(initialToken);\n    const [userID, setUserID] = useState(initialUserID);\n    \n    const userIsLoggedIn = !!token;\n    \n    const loginHandler = (token, userID) => {\n        setToken(token);\n        setUserID(userID);\n        localStorage.setItem('token', token);\n        localStorage.setItem('userID', userID);\n    }\n    \n    const logoutHandler = () => {\n        setToken(null);\n        localStorage.removeItem('token');\n    }\n    \n    const contextValue = {\n        token: token,\n        isLoggedIn: userIsLoggedIn,\n        userID: userID,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n    \n    return (\n        <AuthContext.Provider value={contextValue}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context'\nimport classes from './MainNavigation.module.css'\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  \n  const logoutHandler = () => {\n    authCtx.logout();\n  }\n  \n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}> EchoOfTime </div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          \n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default MainNavigation","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation'\n\nconst Layout = (props) => {\n    return (\n        <Fragment>\n            <MainNavigation />\n            <main>{props.children}</main>\n        </Fragment>\n    );\n};\n\nexport default Layout;","import axios from 'axios'\n\nconst instance = axios.create({\n    timeout: 5000,\n    baseURL: \"https://sound-of-time-default-rtdb.firebaseio.com\"\n})\n\nexport default instance","/* ========== import React and React hooks ========== */\nimport React, { useRef } from 'react';\n\n/* ========== import other libraries ========== */\nimport axios from '../../../axios'\n\n/* ========== import corresponding css ========== */\nimport classes from './NewPlanForm.module.css'\n\nconst NewPlanForm = (props) => {\n    /**\n     * @note\n     * useRef() hook will help avoid the redundant calls to setState() and re-render the page for every keystroke\n     */\n    var input_plan = useRef();\n    \n    /* ========== Methods ========== */\n    const postPlanHandler = () => {\n        const target = {\n            complete: false,\n            active: true,\n            title: input_plan.current.value,\n            comment: \"\",\n            rank: props.rank? props.rank:0,\n            parent: props.parent? props.parent:\"\",\n            children: {},\n            date: \"\",\n            seconds: 0,\n        }\n        \n        props.g_state.plans_element.addNewPlan(target);\n        // axios.post(`/plans.json`, target)\n        // .then(response => {\n        //     console.log(response)\n        //     const new_id = response.data.name\n            \n        //     props.g_state.plans[new_id]=target\n            \n        //     // update parent's children\n        //     if (props.parent)  {\n        //     const parent_plan = props.g_state.plans[props.parent]\n        //     if (!parent_plan.children) parent_plan.children={}\n        //     parent_plan.children[new_id]=true\n            \n        //     axios.put(`/plans/${props.parent}/children/${response.data.name}.json`, true)\n        //     .then(response =>{\n        //         console.log(response)\n        //     })\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        //     }\n        //     props.g_state.plans_element.updateTrigger()\n        // })\n        // .catch(error => {\n        //     console.log(error)\n        // })\n        props.form_toggler()\n    }\n    \n    return(\n        <div className={classes.control}>\n            <input type=\"text\" ref={input_plan} />\n            <button onClick={postPlanHandler}>Add</button>\n            <button onClick={props.form_toggler}>Cancel</button>\n        </div>\n    )\n    \n\n}\n\nexport default NewPlanForm","import classes from './Backdrop.module.css'\n\nconst Backdrop = (props) => {\n    return (\n        <div className={classes.backdrop} onClick={props.onClick}></div>\n    )\n}\n\nexport default Backdrop","import React from 'react'\nimport classes from './TimeRange.module.css'\n\nconst TimeRange = (props) => {\n    \n    return (\n        <div className={classes.input_frame}>\n            <input className={classes.input_time} type=\"number\" onChange={props.plan.expectedHoursChangeHandler} value = {props.plan.state.expected_hours}/>:\n            <input className={classes.input_time} type=\"number\" onChange={props.plan.expectedMinutesChangeHandler} value = {props.plan.state.expected_minutes}/>:\n            <input className={classes.input_time} type=\"number\" onChange={props.plan.expectedSecondsChangeHandler} value = {props.plan.state.expected_seconds}/>\n        </div>\n    )\n}\n\nexport default TimeRange","\n\nexport function secondsToHHMMSS(seconds){\n    const HH = (seconds / 3600)>>0\n    const MM = formatTo2(((seconds%3600)/60)>>0)\n    const SS = formatTo2(seconds%60)\n    return `${HH}:${MM}:${SS}`\n}\n\nexport function secondsToHour(seconds){\n    let HH  = (seconds / 3600) >> 0;\n    let MM  = ((seconds % 3600) / 60) >> 0;\n    let SS  = seconds % 60;\n    \n    if (HH>0){\n        return `${HH} hours ${MM} minites`;\n    } else {\n        return `${MM} minites ${SS} seconds`;\n    }\n}\n\nfunction formatTo2(n){\n    if (n<10) return `0${n}`;\n    else return `${n}`;\n}\n\nconst month_lookup = {\n    0: 'Jan',\n    1: 'Feb',\n    2: 'Mar',\n    3: 'Apr',\n    4: 'May',\n    5: 'Jun',\n    6: 'Jul',\n    7: 'Aug',\n    8: 'Sep',\n    9: 'Oct',\n    10: 'Nov',\n    11: 'Dec'\n}\n\n\nexport function dateToReadable(date_string){\n        if (date_string === '') return '';\n        const date = new Date(date_string+'T00:00:00');\n        if(isToday(date)) {\n            return \"today\";\n        }else {\n            return month_lookup[date.getMonth()] + \" \" + date.getDate();\n        }\n    }\n    \nexport function isSameDay(o1, o2){\n    return o1.getFullYear() === o2.getFullYear() &&\n    o1.getMonth() === o2.getMonth() &&\n    o1.getDate() === o2.getDate();\n}\n\nexport function isToday(date){\n    const today = new Date();\n    return isSameDay(date, today);\n}\n\nexport function dateStringIsToday(date_string){\n    const today = new Date();\n    const date = new Date(date_string+'T00:00:00');\n    return isSameDay(date, today);\n}","/* ========== import react components ========== */\nimport React, { Component } from 'react';\nimport {secondsToHHMMSS} from '../Utils/Utils'\n\n/* ========== import corresponding css ========== */\n// import classes from './Timer.module.css'\n\nclass Timer extends Component {\n \n    state = {\n        seconds:this.props.seconds? this.props.seconds:0\n    }\n    \n    interval = null\n    \n    componentDidMount(){\n        this.props.plan_component.timer = this;\n    }\n    \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.seconds !== this.state.seconds) {\n        this.setState({seconds: nextProps.seconds});\n      }\n    }\n    \n    render(){\n        return(\n            <div>\n                {secondsToHHMMSS(this.state.seconds)}\n            </div>\n        )\n    }\n    \n    tick(){\n        this.setState({seconds:this.state.seconds+1})\n    }\n    \n    reset_timer(){\n        console.log(`Timer reset`)\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n        this.setState({seconds:0})\n    }\n    \n    pause_timer(){\n        console.log(`Timer paused`)\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    }\n    \n    set_seconds(n){\n        this.setState({seconds:n})\n    }\n    \n    get_seconds(){\n        return this.state.seconds;\n    }\n    \n    start_timer(){\n        console.log(`Timer started`)\n        this.interval = setInterval(() => this.tick(), 1000)\n    }\n    \n}\n\nexport default Timer","import axios from '../../axios'\nimport React, { Component } from 'react'\nimport NewPlanForm from './NewPlan/NewPlanForm'\nimport Backdrop from '../UI/Backdrop'\nimport classes from './Plan.module.css'\nimport Calendar from 'react-calendar';\nimport TimeRange from '../TimeRange/TimeRange';\nimport Timer from '../Timer/Timer'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport 'react-calendar/dist/Calendar.css';\n\n\nimport {dateToReadable, secondsToHHMMSS} from '../Utils/Utils'\n\nclass Plan extends Component {\n    state = {\n        show_form: false,\n        show_children: true,\n        show_calendar: false,\n        plan_date: \"\",\n        expected_hours: 0,\n        expected_minutes: 0,\n        expected_seconds: 0\n    }\n    \n    g_state=this.props.g_state\n    id = this.props.id\n    timer = null\n    \n    /* ========== Lifecycle ========== */\n    componentDidMount() {\n        this.g_state.plan_components[this.id] = this;\n        const data = this.g_state.plans[this.id];\n        if (!data) return;\n        if (!data.expected_seconds) data.expected_seconds = 0;\n        const seconds = data.expected_seconds;\n        this.setState({expected_hours: (seconds/3600)>>0, expected_minutes:((seconds%3600)/60)>>0, expected_seconds:seconds%60});\n        \n    }\n    \n    render() {\n        const data = this.g_state.plans[this.id]\n        // console.log(`Render ${this.id}`)\n        if (!data) return null\n        if (data.complete) return null\n        return(\n            <React.Fragment>\n                {/* Render itself */}\n                <Row>\n                    <Col xs={1} />\n                    <Col xs='auto'>\n                        <div className={classes.plan_left_button} onClick={this.childrenToggleHandler}>\n                            {/* Ternary expression: render the icon conditionally based on the state show_children using ternary operator */}\n                            {data.children && Object.keys(data.children).length > 0 &&(!this.state.show_children ? \n                                <img className={classes.plan_left_button_img} src='expand.png' alt=''/> :\n                                <img className={classes.plan_left_button_img} src='shrink.png' alt=''/>)\n                            }\n                        </div>\n                    </Col>\n                \n                    <Col xs={{ span: 3}} style={{display:'flex', justifyContent:'left'}}>\n                        <div style={{'text-indent':`calc(${data.rank} * 20px)`}}>{data.title || 'No title'}</div>\n                    </Col>\n                    \n                    <Col xs={2}>\n                        <TimeRange \n                            // expectedHoursChangeHandler={this.expectedHoursChangeHandler}\n                            // expectedMinutesChangeHandler={this.expectedMinutesChangeHandler}\n                            // expectedSecondsChangeHandler={this.expectedSecondsChangeHandler}\n                            // expected_hours = {this.expected_hours}\n                            // expected_minutes = {this.expected_minutes}\n                            // expected_seconds = {this.expected_seconds}\n                            plan = {this}\n                        />\n                    </Col>\n                    \n                    <Col xs={2}>\n                        <Timer seconds={data.seconds} plan_component={this} />\n                    </Col>\n                    \n                    <Col xs={1}>\n                        <div className={classes.plan_date}>{data.date != null ? dateToReadable(data.date) : ''}</div>\n                    </Col>\n                    \n                    <Col xs=\"auto\" style={{padding: 0}}>\n                        <img className={classes.plan_calendar_icon} onClick={this.calendarToggleHandler} src=\"https://img.icons8.com/windows/32/000000/calendar.png\" />\n                        {this.state.show_calendar &&\n                            <React.Fragment>\n                                <Backdrop onClick={this.calendarToggleHandler} />\n                                <div className={classes.plan_calendar}>\n                                    <Calendar onChange={this.dateChangeHandler} />\n                                </div>\n                            </React.Fragment>\n                        }\n                    </Col>\n                    \n                    <Col xs=\"auto\" style={{padding: 0}}>\n                        <img className={classes.plan_clock_button} onClick={this.clockToggleHandler} src=\"https://img.icons8.com/ios-glyphs/30/000000/--pocket-watch.png\" alt=''/>\n                    </Col>\n                    \n                    <Col xs=\"auto\" style={{padding: 0}}>\n                        <div className={classes.plan_add_button} onClick={this.formToggleHandler}>+</div>\n                    </Col>\n                    \n                    <Col xs=\"auto\">\n                        <div className={classes.check_icon} onClick={this.completeHandler}>\n                            <img className={classes.check_icon_img} src=\"https://img.icons8.com/ios/50/000000/checked-checkbox--v1.png\" alt=''/>\n                        </div>\n                    </Col>\n                </Row>\n                \n                <Row>\n                    {this.state.show_form &&\n                        <Container fluid>\n                            <Row>\n                                <Col xs={1}></Col>\n                                <Col xs=\"auto\"><div style={{width: `calc(20px + ${data.rank} * 20px)`}}></div></Col>\n                                <Col xs={{ span: 5}} style={{display:'flex', justifyContent:'left'}}>\n                                    <NewPlanForm\n                                        form_toggler={this.formToggleHandler}\n                                        parent={this.id}\n                                        rank={data.rank+1}\n                                        g_state={this.props.g_state}\n                                    />\n                                </Col>\n                            </Row>\n                        </Container>\n                    }\n                </Row>\n                \n                {/* Render children plans */\n                this.state.show_children && data.children && Object.keys(data.children).map(item=>\n                    // <li className={classes.tree_item} key={item}><Plan className={classes.child_task} g_state={this.g_state} id={item} key={item}></Plan></li>\n                    <Plan className={classes.child_task} g_state={this.g_state} id={item} key={item}></Plan>\n                )\n                }\n                \n                \n            </React.Fragment>\n        )\n    }\n    \n    /* ========== Methods ========== */\n    formToggleHandler = () => {\n        this.setState({show_form: !this.state.show_form})\n    }\n    \n    childrenToggleHandler = () => {\n        this.setState({show_children: !this.state.show_children})\n    }\n    \n    clockToggleHandler = () => {\n        const now = Math.floor(Date.now()/1000)\n        if (this.g_state.plan_in_progress){\n            // end current plan\n            console.log(`End current timer.`)\n            const duration = now - this.g_state.plan_start_timestamp\n            this.g_state.timer.reset_timer()\n            this.updatePlanTimer(this.g_state.plan_in_progress, duration)\n        }\n        if (this.g_state.plan_in_progress === this.id){\n            // end this plan\n            this.g_state.plans_element.updateGState(\"plan_in_progress\",\"\")\n        } else {\n            console.log(`Start new timer.`)\n            this.g_state.plans_element.updateGState(\"plan_in_progress\",this.id)\n            this.g_state.plans_element.updateGState(\"plan_start_timestamp\",now)\n            this.g_state.timer.start_timer()\n            this.startTimerRecursively(this.id)\n        }\n        \n        this.g_state.plans_element.updateTrigger()\n    }\n    \n    startTimerRecursively(id){\n        while(id){\n            const plan_component = this.g_state.plan_components[id];\n            if (!plan_component) break\n            if (plan_component.timer) plan_component.timer.start_timer();\n            id = this.g_state.plans[id].parent\n        }\n    }\n    \n    calendarToggleHandler = () => {\n        this.setState({show_calendar: !this.state.show_calendar})\n    }\n    \n    updatePlanTimer = (id, duration) => {\n        console.log(`Update plans.`)\n        while(id){\n            const plan = this.g_state.plans[id]\n            if (!plan) break\n            // pause timer\n            const plan_component = this.g_state.plan_components[id];\n            if (plan_component && plan_component.timer) plan_component.timer.pause_timer();\n            \n            const new_seconds = this.g_state.plans[id].seconds + duration\n            // plan.seconds = new_seconds\n            this.g_state.plans_element.updatePlanAttr(id, \"seconds\", new_seconds);\n            // axios.put(`/plans/${id}/seconds.json`, new_seconds)\n            //     .then(response => {\n            //         console.log(response)\n            //     })\n            //     .catch(error => {\n            //         console.log(error)\n            //     })\n            \n            id = this.g_state.plans[id].parent\n        }\n    }\n    \n    dateChangeHandler = (date) => {\n        // const month_lookup = new Map();\n        // month_lookup.set(0, 'Jan')\n        //             .set(1, 'Feb')\n        //             .set(2, 'Mar')\n        //             .set(3, 'Apr')\n        //             .set(4, 'May')\n        //             .set(5, 'Jun')\n        //             .set(6, 'Jul')\n        //             .set(7, 'Aug')\n        //             .set(8, 'Sep')\n        //             .set(9, 'Oct')\n        //             .set(10, 'Nov')\n        //             .set(11, 'Dec');\n        // const today = new Date()\n        // if(date.getDate() === today.getDate()) {\n        //     this.setState({plan_date: \"today\"})\n        // }else {\n        //     this.setState({plan_date: month_lookup.get(date.getMonth()) + \" \" + date.getDate() })\n        // }\n        \n        /* update database in format YYYY-MM-DD */\n        this.g_state.plans_element.updatePlanAttr(this.id, \"date\", date.toISOString().slice(0,10))\n        this.g_state.plans_element.updateTrigger();\n        \n    }\n    \n    completeHandler = () => {\n        this.g_state.plans_element.updatePlanAttr(this.id, \"complete\", true)\n        // this.g_state.plans[this.id].complete = true;\n        // axios.put(`/plans/${this.id}/complete.json`, true)\n        //         .then(response => {\n        //             console.log(response)\n        //         })\n        //         .catch(error => {\n        //             console.log(error)\n        //         })\n        this.g_state.plans_element.updateTrigger()\n    }\n    \n    expectedHoursChangeHandler = (event) => {\n        this.setState({expected_hours: event.target.value});\n        const seconds = event.target.value * 3600 + this.state.expected_minutes * 60 + this.state.expected_seconds;\n        this.g_state.plans_element.updatePlanAttr(this.id, \"expected_seconds\", seconds);\n    }\n    expectedMinutesChangeHandler = (event) => {\n        this.setState({expected_minutes: event.target.value})\n        const seconds = this.state.expected_hours * 3600 + event.target.value * 60 + this.state.expected_seconds;\n        this.g_state.plans_element.updatePlanAttr(this.id, \"expected_seconds\", seconds);\n    }\n    expectedSecondsChangeHandler = (event) => {\n        this.setState({expected_seconds: event.target.value})\n        const seconds = this.state.expected_hours * 3600 + this.state.expected_minutes * 60 + event.target.value;\n        this.g_state.plans_element.updatePlanAttr(this.id, \"expected_seconds\", seconds);\n    }\n}\n\nexport default Plan","/* ========== import React and React hooks ========== */\nimport React, { Component } from 'react'\n\n/* ========== import react components ========== */\nimport NewPlanForm from './NewPlanForm'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n/* ========== import corresponding css ========== */\nimport classes from './NewPlan.module.css'\n\n\nclass NewPlan extends Component {\n    state = {\n        show_form: false\n    }\n    \n    /* ========== Lifecycle ========== */\n    render() {\n        if (this.state.show_form) {\n            return (\n                <Container fluid>\n                    <Row>\n                        <Col xs={1}></Col>\n                        <Col xs=\"auto\"><div className={classes.placeholder}></div></Col>\n                        <Col xs={{ span: 5}} style={{display:'flex', justifyContent:'left'}}>\n                            <NewPlanForm\n                                form_toggler={this.formToggleHandler}\n                                parent={this.props.root_id}\n                                rank={this.props.rank}\n                                g_state={this.props.g_state}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        } else {\n            return (\n                <Container fluid>\n                    <Row>\n                        <Col xs={1}></Col>\n                        <Col xs=\"auto\"><div className={classes.placeholder}></div></Col>\n                        <Col xs={{ span: 3}} style={{display:'flex', justifyContent:'left'}}>\n                            <div className={classes.hint} onClick={this.formToggleHandler}>Click here to add a task</div>\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        }\n\n    }\n\n    /* ========== Methods ========== */\n    formToggleHandler = () => {\n        this.setState({show_form: !this.state.show_form})\n    }\n}\n\n\nexport default NewPlan","/* ========== import react components ========== */\nimport React, { Component } from 'react';\nimport {secondsToHHMMSS} from '../Utils/Utils'\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n/* ========== import corresponding css ========== */\n// import classes from './Timer.module.css'\n\nclass CurrentTimer extends Component {\n \n    state = {\n        seconds:0,\n        plan_title:\"NULL\"\n    }\n    \n    interval = null\n    plan_title = \"\"\n    g_state = this.props.g_state\n    \n    componentDidMount(){\n        this.props.g_state.timer=this;\n    }\n    \n    render(){\n        return(\n            <div>\n            <Row>\n                    <Col xs={1} />\n                    <Col xs=\"auto\"><div style={{width: '20px'}}></div></Col>\n                    <Col>Current Plan: {this.state.plan_title}</Col>\n            </Row>\n            <Row>\n                    <Col xs={1} />\n                    <Col xs=\"auto\"><div style={{width: '20px'}}></div></Col>\n                    <Col>New Time: {secondsToHHMMSS(this.state.seconds)}</Col>\n            </Row>\n            </div>\n        \n        )\n    }\n    \n    tick(){\n        this.setState({seconds:this.state.seconds+1})\n    }\n    \n    reset_timer(){\n        console.log(`Timer reset`)\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n        this.setState({seconds:0, plan_title:\"NULL\"})\n    }\n    \n    pause_timer(){\n        console.log(`Timer reset`)\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    }\n    \n    set_timer(n){\n        this.setState({seconds:n})\n    }\n    \n    get_seconds(){\n        return this.state.seconds;\n    }\n    \n    \n    start_timer(){\n        console.log(`Timer start`)\n        const plan_id = this.g_state.plan_in_progress\n        const plan_title = this.g_state.plans[plan_id].title\n        this.setState({plan_title:plan_title})\n        this.interval = setInterval(() => this.tick(), 1000)\n    }\n    \n}\n\nexport default CurrentTimer","/* ========== import React and React hooks ========== */\nimport React, { Component } from 'react'\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* ========== import components ========== */\nimport {dateStringIsToday, secondsToHHMMSS} from '../../Utils/Utils'\n\n/* ========== import corresponding css ========== */\nimport classes from './TodayPlans.module.css'\n\n\nclass TodayPlans extends Component {\n    state = {\n        expected_seconds:0,\n        logged_seconds:0\n    }\n    \n    g_state = this.props.g_state;\n    \n    /* ========== Lifecycle ========== */\n    componentDidMount(){\n        // this.init_today_plans();\n        // this.setState({update:true})\n    }\n    \n    \n    render(){\n        this.init_today_plans();\n        console.log(\"logged_seconds is: \", this.state.logged_seconds);\n        return (\n            <div>\n                <Row>\n                    <Col xs={1} />\n                    <Col xs=\"auto\"><div style={{width: '20px'}}></div></Col>\n                    <Col className={classes.title}>Today</Col>\n                </Row>\n                \n                <Row>\n                    <Col xs={1} />\n                    <Col xs=\"auto\"><div style={{width: '20px'}}></div></Col>\n                    <Col xs='auto'>Estimated Time: {secondsToHHMMSS(this.state.expected_seconds)}</Col>\n                </Row>\n                \n                <Row>\n                    <Col xs={1} />\n                    <Col xs=\"auto\"><div style={{width: '20px'}}></div></Col>\n                    <Col xs='auto'>Used Time: {secondsToHHMMSS(this.state.logged_seconds)}</Col>\n                </Row>\n                \n                <Row>\n                    <Col xs={1} />\n                    <Col xs=\"auto\"><div style={{width: '20px'}}></div></Col>\n                    <Col xs='auto'>Still Need: {secondsToHHMMSS(this.state.expected_seconds - this.state.logged_seconds)}</Col>\n                </Row>\n                \n    \n                {Object.keys(this.g_state.today_plans).map(item=>\n                    <Row key={item}>\n                    <Col xs={1} />\n                    <Col xs=\"auto\"><div style={{width: '30px'}}></div></Col>\n                    <Col xs={1}>{this.g_state.plans[item].title}</Col>\n                    </Row>)}        \n            </div>\n            \n        )\n        \n            // <div>You have logged {secondsToHHMMSS(this.state.logged_seconds)}.</div>\n            // <div>Expected spent time: Today's Plans still need {secondsToHHMMSS(this.state.expected_seconds - this.state.logged_seconds)}.</div>\n\n    }\n\n    /* ========== Methods ========== */\n    \n    dfs(today_plans, id){\n        const plan = this.g_state.plans[id];\n        if (plan && !plan.complete){\n            if (plan.date && dateStringIsToday(plan.date)){\n                today_plans[id] = true;\n            } else {\n                if (plan.child_id){\n                    for (const key of Object.keys(plan.children)){\n                        this.dfs(today_plans, key);\n                    }\n                }\n            }\n        }\n    }\n    \n    \n    init_today_plans(){\n        var seconds = 0;\n        this.g_state.today_plans = {};\n        for(const [id, plan] of Object.entries(this.g_state.plans)){\n            if (plan && plan.date && dateStringIsToday(plan.date) && !plan.complete){\n                this.g_state.today_plans[id] = true;\n                if (plan.expected_seconds) seconds = seconds + plan.expected_seconds;\n            }\n        }\n        \n        this.state.expected_seconds=seconds;\n        this.update_logged_seconds();\n        // console.log(`Today's plans = ${Object.keys(this.g_state.today_plans).length}`);\n    }\n    \n    update_logged_seconds(){\n        var seconds = 0;\n        for (const id of Object.keys(this.g_state.today_plans)){\n            seconds = seconds + this.g_state.plans[id].seconds;\n        }\n        this.state.logged_seconds=seconds;\n    }\n}\n\n\nexport default TodayPlans","import React, { Component } from 'react';\n\n/* ========== import react components ========== */\nimport Plan from './Plan'\nimport NewPlan from '../Plans/NewPlan/NewPlan'\nimport CurrentTimer from '../Timer/CurrentTimer'\nimport TodayPlans from './TodayPlans/TodayPlans'\n\n/* ========== import other libraries ========== */\nimport axios from '../../axios'\nimport {secondsToHour} from '../Utils/Utils'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AuthContext from '../../store/auth-context';\n\n/* ========== import corresponding css ========== */\nimport classes from './Plans.module.css'\n\nclass Plans extends Component {\n    state = {\n        isLoading : true,\n        update: true\n    }\n    \n    g_state = {\n        today_plans:{},\n        plan_components:{},\n        plan_in_progress: null,\n        plan_start_timestamp: 0,\n        plans_element: this,\n        timer: \"\",\n        plan_promise: null\n    }\n    \n    root_id=`root_plan`\n    \n    static contextType = AuthContext;\n    \n    user_path = this.context.userID;\n    \n    root_plan={\n        children:{},\n        seconds:0,\n        rank:-1\n    }\n\n    /* ========== Lifecycle ========== */\n    componentDidMount() {\n\n        this.g_state.plan_promise = axios.get(`${this.user_path}/plans.json`);\n        this.g_state.plan_promise.then(response => {\n            if(response.data != null) {\n                console.log(response)\n                this.g_state.plans=response.data\n                \n                // Find exist root plan. If not found, put new one in database\n                const new_root_plan = this.g_state.plans[this.root_id]\n                if (new_root_plan){\n                    this.root_plan = new_root_plan\n                } else {\n                    this.addRootPlan();\n                }\n                this.setState({isLoading:false});\n            } else {\n                // Create new plan list for the user\n                this.addRootPlan();\n            }\n            \n            \n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    render() {\n        return(\n            <div className={classes.plans}>\n                {//<div> You have logged {secondsToHour(this.root_plan.seconds)} </div>\n                }\n                \n                <Container fluid className={classes.container}>\n                    <CurrentTimer g_state={this.g_state} />\n                </Container>\n                \n                <Container fluid className={classes.container}>\n                    {/* Render plans with Rank == 0 */\n                        this.root_plan.children && Object.keys(this.root_plan.children).map(item=>\n                            <Plan g_state={this.g_state} id={item} key={item}></Plan>\n                        )\n                    }\n                </Container>\n                \n                <NewPlan g_state={this.g_state} rank={0} root_id={this.root_id}/>\n                \n                <Container fluid className={classes.container}>\n                    {this.g_state.plans && <TodayPlans g_state={this.g_state}/>}\n                </Container>\n            </div>\n        )\n    }\n\n    /* ========== Methods ========== */\n    updateTrigger(){\n        this.setState({update:true})\n    }\n    \n    updateGState(key, value){\n        console.log(`Update global value ${key} = ${value}`)\n        this.g_state[key]=value\n        this.putDatabase(`${this.user_path}/g_state/${key}.json`, value)\n    }\n    \n    updatePlanAttr(id, attr, value){\n        this.g_state.plans[id][attr]=value\n        this.putDatabase(`${this.user_path}/plans/${id}/${attr}.json`, value)\n    }\n    \n    updateExpectedSecond(id, delta){\n        const data = this.g_state.plans[id]\n        if (!data.expected_seconds) data.expected_seconds = 0;\n        this.updatePlanAttr(id, \"expected_seconds\", data.expected_seconds + delta)\n    }\n    \n    putDatabase(path, target){\n        if (this.isString(target)) target = `\"${target}\"`\n        axios.put(path, target)\n            .then(response=>{\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    \n    addPlanChild(id, child_id){\n        console.log(`${id} add children ${child_id}`)\n        const parent_plan = this.g_state.plans[id]\n        if (!parent_plan.children) parent_plan.children={}\n        parent_plan.children[child_id]=true\n        axios.put(`${this.user_path}/plans/${id}/children/${child_id}.json`, true)\n        .then(response =>{\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    addNewPlan(target){\n        axios.post(`${this.user_path}/plans.json`, target)\n        .then(response => {\n            console.log(response)\n            const new_id = response.data.name\n            \n            this.g_state.plans[new_id]=target\n            \n            // update parent's children\n            \n            if (target.parent)  {\n                this.addPlanChild(target.parent, new_id)\n            }\n            this.updateTrigger()\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    addRootPlan(){\n        axios.put(`${this.user_path}/plans/${this.root_id}.json`, this.root_plan)\n        .then(response=>{\n            console.log(`New root plan`)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    isString(x){\n        return typeof x === 'string' || x instanceof String\n    }\n    \n}\n\nexport default Plans","import { useContext } from 'react';\n\nimport AuthContext from '../../store/auth-context'\nimport classes from './StartingPageContent.module.css';\n\nconst StartingPageContent =  () => {\n    const authCtx = useContext(AuthContext);\n    const isLoggedIn = authCtx.isLoggedIn;\n    \n    return(\n        <section className={classes.starting}>\n            <h1> Login to Start </h1>\n        </section>\n    )\n}\n\nexport default StartingPageContent","import StartingPageContent from '../components/StartingPage/StartingPageContent'\n\nconst HomePage = () => {\n    return <StartingPageContent />\n};\n\nexport default HomePage;","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = (props) => {\n    const history = useHistory();\n    const emailInputRef    = useRef();\n    const passwordInputRef = useRef();\n    \n    const authCtx = useContext(AuthContext);\n    \n    const [isLogin, setIsLogin] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    \n    const switchAuthModeHandler = () => {\n        setIsLogin((prevState) => !prevState);\n    }\n    \n    const submitHandler = (event) => {\n        event.preventDefault();\n        \n        const enteredEmail = emailInputRef.current.value;\n        const enteredPassword = passwordInputRef.current.value\n        \n        setIsLoading(true)\n        let url;\n        if(isLogin) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCIl4ZZYuS6wAi1fKyItcok6vtZTNOSlQU'; \n        } else {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCIl4ZZYuS6wAi1fKyItcok6vtZTNOSlQU';\n        }\n        fetch(\n            url,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: enteredEmail,\n                    password: enteredPassword,\n                    returnSecureToken: true\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n        ).then(res => {\n            setIsLoading(false);\n            if(res.ok) {\n                return res.json();\n            } else {\n                return res.json().then(data => {\n                    // show an error modal\n                    let errorMessage = 'Authentication failed!'\n                    if(data && data.error && data.error.message) {\n                        errorMessage = data.error.message;\n                    }\n                    throw new Error(errorMessage);\n                })\n            }\n        })\n        .then(data => {\n            authCtx.login(data.idToken, data.localId);\n            history.replace('/plans');\n        })\n        .catch(err => {\n            alert(err.message)\n        })\n    }\n    \n    return(\n        <section className={classes.auth}>\n            <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n            <form onSubmit={submitHandler}>\n                <div className={classes.control}>\n                    <label htmlFor='email'>Your email</label>\n                    <input \n                        type='email' \n                        id='email' \n                        required \n                        ref={emailInputRef} \n                    />\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='password'>Your Password</label>\n                    <input\n                        type='password'\n                        id='password'\n                        required\n                        ref={passwordInputRef}\n                    />\n                </div>\n                \n                <div className={classes.actions}>\n                    {!isLoading && <button>{isLogin? 'Login' : 'Create Account'}</button>}\n                    { isLoading && <p>Sending request...</p> }\n                    <button \n                        type='button' \n                        className={classes.toggle}\n                        onClick={switchAuthModeHandler}\n                    >\n                        {isLogin ? 'Create new account' : 'Login with existing account' }\n                    </button>\n                </div>\n            </form>\n        </section>\n    )\n}\n\nexport default AuthForm;","import AuthForm from '../components/Auth/AuthForm'\n\nconst AuthPage = () => {\n    return <AuthForm />\n}\n\nexport default AuthPage;","import { useContext } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Plans from './components/Plans/Plans';\nimport HomePage from './pages/HomePage';\nimport AuthPage from './pages/AuthPage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          {!isLoggedIn && (\n            <Route path='/' exact>\n              <HomePage />\n            </Route>\n          )}\n          \n          {!isLoggedIn && (\n            <Route path='/auth'>\n              <AuthPage />\n            </Route>\n          )}\n          \n          {isLoggedIn && (\n            <Route path='/plans'>\n              <div className=\"App\">\n                <Plans />\n              </div>\n            </Route>\n          )}\n          \n          <Route path='*'>\n            <Redirect to='/' />\n          </Route>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n    \n    \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}